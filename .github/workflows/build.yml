name: Build and Release
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["12", "14"]
    name: Node ${{ matrix.node }} build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Installing Dependencies
        run: yarn install --immutable
      - name: Linting Source
        run: yarn lint
  release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: ["test"]
    strategy:
      matrix:
        node: ["14"]
    name: Automatic Release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

#      - name: "Automated Version Bump"
#        id: bump_version
#        uses: "phips28/gh-action-bump-version@master"
#        with:
#          tag-prefix: 'v'
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Installing Dependencies
        run: yarn install --immutable
      - name: Building Source
        run: yarn build
      - name: Building Docs
        run: yarn docgen
      - name: Bump Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      - name: Packaging
        run: yarn package

#      - name: Release
#        uses: softprops/action-gh-release@v1
#        with:
#          tag_name: ${{ steps.bump_version.outputs.newTag }}
#          files: |
#            API.md
#            README.md
#            LICENSE
#            dist/**/*.tgz
#            dist/**/*.tar.gz
#            dist/**/*.whl
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set NPM permissions
        run: npm --global config --scope justinm set access public
      - name: Publish to NPM
        run: yarn release:npm
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Publish to PyPI
        run: yarn release:pypi
        env:
          TWINE_PASSWORD: ${{secrets.PYPI_TOKEN}}
    container:
      image: jsii/superchain
